import bpy
import math

scene = bpy.context.scene

for action in bpy.data.actions:
    bpy.data.actions.remove(action)

scene.animation_data_clear()
for obj in scene.objects:
    obj.animation_data_clear()

# joint_axes refers to the single axis of rotation for each joint (1 to 7)
# x = 0, y = 1, z = 2
joint_axes = [1, 1, 1, 1, 1, 0, 1]
joint_names = ["Joint1", "Joint2", "Joint3", "Joint4", "Joint5", "Joint6", "Joint7"]

def move_joint(joints, joint_id, angle_in_rad, axis=1):
    if joint_id == "Joint7":
        angle = angle_in_rad + (math.pi/2)
    else:
        angle = angle_in_rad

    joints[joint_id].rotation_euler[axis] = angle
    joints[joint_id].keyframe_insert(data_path="rotation_euler")
    # print(joint_id, joints[joint_id], joints[joint_id].rotation_euler)

def move_joints(joints, joint_rotations):
    for joint_id, id in zip(joint_names, [i for i in range(7)]):
        move_joint(joints, joint_id, joint_rotations[id], joint_axes[id])

joints = bpy.data.objects[3].pose.bones

scene.frame_set(0)
neutral_pose = [-0.017792060227770554, -0.7601235411041661, 0.019782607023391807, -2.342050140544315, 0.029840531355804868, 1.5411935298621688, 0.7534486589746342]
#neutral_pose = [0,0,0,0,0,0,0]
move_joints(joints, neutral_pose)


scene.frame_set(10)
rotations = [2.5518125080559173e-05, -0.7849307176477147, -4.645161306537915e-05, -2.3559771465868264, 7.019030750043953e-05, 1.570980184533493, 0.7849546746366798]
move_joints(joints, rotations)

scene.frame_set(20)
rotations = [-0.10210890092890124, -0.7530542856907088, 0.0778394068956478, -2.357517548836725, -0.023321629840332522, 1.5410010824242582, 0.8459632720163934]
move_joints(joints, rotations)

#bpy.ops.export_anim.bvh(filepath="./test_export.bvh", rotate_mode="XYZ")